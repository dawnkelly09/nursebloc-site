"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@hcaptcha";
exports.ids = ["vendor-chunks/@hcaptcha"];
exports.modules = {

/***/ "(ssr)/./node_modules/@hcaptcha/react-hcaptcha/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@hcaptcha/react-hcaptcha/dist/index.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ \"(ssr)/./node_modules/@babel/runtime/helpers/typeof.js\"));\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(ssr)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/./node_modules/@babel/runtime/helpers/createClass.js\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \"(ssr)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(ssr)/./node_modules/@babel/runtime/helpers/inherits.js\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(ssr)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(ssr)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\n\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\n\nvar _utils = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@hcaptcha/react-hcaptcha/dist/utils.js\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SCRIPT_ID = 'hcaptcha-api-script-id';\nvar HCAPTCHA_LOAD_FN_NAME = 'hcaptchaOnLoad'; // Prevent loading API script multiple times\n\nvar resolveFn;\nvar rejectFn;\nvar mountPromise = new Promise(function (resolve, reject) {\n  resolveFn = resolve;\n  rejectFn = reject;\n}); // Generate hCaptcha API script\n\nvar mountCaptchaScript = function mountCaptchaScript() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (document.getElementById(SCRIPT_ID)) {\n    // API was already requested\n    return mountPromise;\n  } // Create global onload callback\n\n\n  window[HCAPTCHA_LOAD_FN_NAME] = resolveFn;\n  var domain = params.apihost || \"https://js.hcaptcha.com\";\n  delete params.apihost;\n  var script = document.createElement(\"script\");\n  script.id = SCRIPT_ID;\n  script.src = \"\".concat(domain, \"/1/api.js?render=explicit&onload=\").concat(HCAPTCHA_LOAD_FN_NAME);\n  script.async = true;\n\n  script.onerror = function (event) {\n    return rejectFn('script-error');\n  };\n\n  var query = (0, _utils.generateQuery)(params);\n  script.src += query !== \"\" ? \"&\".concat(query) : \"\";\n  document.head.appendChild(script);\n  return mountPromise;\n};\n\nvar HCaptcha = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(HCaptcha, _React$Component);\n\n  var _super = _createSuper(HCaptcha);\n\n  function HCaptcha(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, HCaptcha);\n    _this = _super.call(this, props); // API Methods\n\n    _this.renderCaptcha = _this.renderCaptcha.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.resetCaptcha = _this.resetCaptcha.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.removeCaptcha = _this.removeCaptcha.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.isReady = _this.isReady.bind((0, _assertThisInitialized2[\"default\"])(_this)); // Event Handlers\n\n    _this.loadCaptcha = _this.loadCaptcha.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleOnLoad = _this.handleOnLoad.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleExpire = _this.handleExpire.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleError = _this.handleError.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleOpen = _this.handleOpen.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleClose = _this.handleClose.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleChallengeExpired = _this.handleChallengeExpired.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    var isApiReady = typeof hcaptcha !== 'undefined';\n    _this.ref = /*#__PURE__*/React.createRef();\n    _this.apiScriptRequested = false;\n    _this.state = {\n      isApiReady: isApiReady,\n      isRemoved: false,\n      elementId: props.id,\n      captchaId: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(HCaptcha, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Once captcha is mounted intialize hCaptcha - hCaptcha\n      var isApiReady = this.state.isApiReady;\n      /*\n       * Check if hCaptcha has already been loaded,\n       * If Yes, render the captcha\n       * If No, create script tag and wait to render the captcha\n       */\n\n      if (isApiReady) {\n        this.renderCaptcha();\n        return;\n      }\n\n      this.loadCaptcha();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      } // Reset any stored variables / timers when unmounting\n\n\n      hcaptcha.reset(captchaId);\n      hcaptcha.remove(captchaId);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      // Prevent component re-rendering when these internal state variables are updated\n      if (this.state.isApiReady !== nextState.isApiReady || this.state.isRemoved !== nextState.isRemoved) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      // Prop Keys that could change\n      var keys = ['sitekey', 'size', 'theme', 'tabindex', 'languageOverride', 'endpoint']; // See if any props changed during component update\n\n      var match = keys.every(function (key) {\n        return prevProps[key] === _this2.props[key];\n      }); // If they have changed, remove current captcha and render a new one\n\n      if (!match) {\n        this.removeCaptcha(function () {\n          _this2.renderCaptcha();\n        });\n      }\n    }\n  }, {\n    key: \"loadCaptcha\",\n    value: function loadCaptcha() {\n      if (this.apiScriptRequested) {\n        return;\n      }\n\n      var _this$props = this.props,\n          apihost = _this$props.apihost,\n          assethost = _this$props.assethost,\n          endpoint = _this$props.endpoint,\n          host = _this$props.host,\n          imghost = _this$props.imghost,\n          hl = _this$props.languageOverride,\n          reCaptchaCompat = _this$props.reCaptchaCompat,\n          reportapi = _this$props.reportapi,\n          sentry = _this$props.sentry,\n          custom = _this$props.custom;\n      var mountParams = {\n        apihost: apihost,\n        assethost: assethost,\n        endpoint: endpoint,\n        hl: hl,\n        host: host,\n        imghost: imghost,\n        recaptchacompat: reCaptchaCompat === false ? \"off\" : null,\n        reportapi: reportapi,\n        sentry: sentry,\n        custom: custom\n      };\n      mountCaptchaScript(mountParams).then(this.handleOnLoad)[\"catch\"](this.handleError);\n      this.apiScriptRequested = true;\n    }\n  }, {\n    key: \"renderCaptcha\",\n    value: function renderCaptcha(onReady) {\n      var isApiReady = this.state.isApiReady;\n      if (!isApiReady) return;\n      var renderParams = Object.assign({\n        \"open-callback\": this.handleOpen,\n        \"close-callback\": this.handleClose,\n        \"error-callback\": this.handleError,\n        \"chalexpired-callback\": this.handleChallengeExpired,\n        \"expired-callback\": this.handleExpire,\n        \"callback\": this.handleSubmit\n      }, this.props, {\n        hl: this.props.hl || this.props.languageOverride,\n        languageOverride: undefined\n      }); //Render hCaptcha widget and provide necessary callbacks - hCaptcha\n\n      var captchaId = hcaptcha.render(this.ref.current, renderParams);\n      this.setState({\n        isRemoved: false,\n        captchaId: captchaId\n      }, function () {\n        onReady && onReady();\n      });\n    }\n  }, {\n    key: \"resetCaptcha\",\n    value: function resetCaptcha() {\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      } // Reset captcha state, removes stored token and unticks checkbox\n\n\n      hcaptcha.reset(captchaId);\n    }\n  }, {\n    key: \"removeCaptcha\",\n    value: function removeCaptcha(callback) {\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      this.setState({\n        isRemoved: true\n      }, function () {\n        hcaptcha.remove(captchaId);\n        callback && callback();\n      });\n    }\n  }, {\n    key: \"handleOnLoad\",\n    value: function handleOnLoad() {\n      var _this3 = this;\n\n      this.setState({\n        isApiReady: true\n      }, function () {\n        // render captcha and wait for captcha id\n        _this3.renderCaptcha(function () {\n          // trigger onLoad if it exists\n          var onLoad = _this3.props.onLoad;\n          if (onLoad) onLoad();\n        });\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var onVerify = this.props.onVerify;\n      var _this$state = this.state,\n          isRemoved = _this$state.isRemoved,\n          captchaId = _this$state.captchaId;\n      if (typeof hcaptcha === 'undefined' || isRemoved) return;\n      var token = hcaptcha.getResponse(captchaId); //Get response token from hCaptcha widget\n\n      var ekey = hcaptcha.getRespKey(captchaId); //Get current challenge session id from hCaptcha widget\n\n      onVerify(token, ekey); //Dispatch event to verify user response\n    }\n  }, {\n    key: \"handleExpire\",\n    value: function handleExpire() {\n      var onExpire = this.props.onExpire;\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      hcaptcha.reset(captchaId); // If hCaptcha runs into error, reset captcha - hCaptcha\n\n      if (onExpire) onExpire();\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(event) {\n      var onError = this.props.onError;\n      var captchaId = this.state.captchaId;\n\n      if (this.isReady()) {\n        // If hCaptcha runs into error, reset captcha - hCaptcha\n        hcaptcha.reset(captchaId);\n      }\n\n      if (onError) onError(event);\n    }\n  }, {\n    key: \"isReady\",\n    value: function isReady() {\n      var _this$state2 = this.state,\n          isApiReady = _this$state2.isApiReady,\n          isRemoved = _this$state2.isRemoved;\n      return isApiReady && !isRemoved;\n    }\n  }, {\n    key: \"handleOpen\",\n    value: function handleOpen() {\n      if (!this.isReady() || !this.props.onOpen) {\n        return;\n      }\n\n      this.props.onOpen();\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      if (!this.isReady() || !this.props.onClose) {\n        return;\n      }\n\n      this.props.onClose();\n    }\n  }, {\n    key: \"handleChallengeExpired\",\n    value: function handleChallengeExpired() {\n      if (!this.isReady() || !this.props.onChalExpired) {\n        return;\n      }\n\n      this.props.onChalExpired();\n    }\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      if (opts && (0, _typeof2[\"default\"])(opts) !== \"object\") {\n        opts = null;\n      }\n\n      return hcaptcha.execute(captchaId, opts);\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(data) {\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      if (data && (0, _typeof2[\"default\"])(data) !== \"object\") {\n        data = null;\n      }\n\n      hcaptcha.setData(captchaId, data);\n    }\n  }, {\n    key: \"getResponse\",\n    value: function getResponse() {\n      return hcaptcha.getResponse(this.state.captchaId);\n    }\n  }, {\n    key: \"getRespKey\",\n    value: function getRespKey() {\n      return hcaptcha.getRespKey(this.state.captchaId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var elementId = this.state.elementId;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.ref,\n        id: elementId\n      });\n    }\n  }]);\n  return HCaptcha;\n}(React.Component);\n\nvar _default = HCaptcha;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGhjYXB0Y2hhL3JlYWN0LWhjYXB0Y2hhL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOEJBQThCLG1CQUFPLENBQUMsNEhBQStDOztBQUVyRiw2QkFBNkIsbUJBQU8sQ0FBQywwSEFBOEM7O0FBRW5GLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFrQjs7QUFFbEIsc0NBQXNDLG1CQUFPLENBQUMsNEZBQStCOztBQUU3RSw4Q0FBOEMsbUJBQU8sQ0FBQyw0R0FBdUM7O0FBRTdGLDJDQUEyQyxtQkFBTyxDQUFDLHNHQUFvQzs7QUFFdkYscURBQXFELG1CQUFPLENBQUMsMEhBQThDOztBQUUzRyx3Q0FBd0MsbUJBQU8sQ0FBQyxnR0FBaUM7O0FBRWpGLHlEQUF5RCxtQkFBTyxDQUFDLGtJQUFrRDs7QUFFbkgsOENBQThDLG1CQUFPLENBQUMsNEdBQXVDOztBQUU3RixvQ0FBb0MsbUJBQU8sQ0FBQyx3R0FBTzs7QUFFbkQsYUFBYSxtQkFBTyxDQUFDLCtFQUFZOztBQUVqQyxpQ0FBaUMsNkRBQTZELHlDQUF5QywrREFBK0QsaUNBQWlDLG9FQUFvRSwyREFBMkQsT0FBTyx5Q0FBeUM7O0FBRXRaLHVDQUF1Qyx3RUFBd0UsMENBQTBDLDhDQUE4QyxNQUFNLHVFQUF1RSxJQUFJLGVBQWUsWUFBWTs7QUFFblQ7QUFDQSw4Q0FBOEM7O0FBRTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEdBQUc7O0FBRUo7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJOzs7QUFHSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxzQ0FBc0M7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBLHdGQUF3Rjs7QUFFeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVE7OztBQUdSO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyRkFBMkY7O0FBRTNGO0FBQ0E7QUFDQSxPQUFPLEdBQUc7O0FBRVY7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU8sR0FBRzs7QUFFVjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVE7OztBQUdSO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7O0FBRW5ELGlEQUFpRDs7QUFFakQsNkJBQTZCO0FBQzdCO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxpQ0FBaUM7O0FBRWpDO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQSxDQUFDOztBQUVEO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGVsbG8tbmVhci8uL25vZGVfbW9kdWxlcy9AaGNhcHRjaGEvcmVhY3QtaGNhcHRjaGEvZGlzdC9pbmRleC5qcz82ODFhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkXCIpO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX3R5cGVvZjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3R5cGVvZlwiKSk7XG5cbnZhciBfY2xhc3NDYWxsQ2hlY2syID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiKSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiKSk7XG5cbnZhciBfYXNzZXJ0VGhpc0luaXRpYWxpemVkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXNzZXJ0VGhpc0luaXRpYWxpemVkXCIpKTtcblxudmFyIF9pbmhlcml0czIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzXCIpKTtcblxudmFyIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiKSk7XG5cbnZhciBfZ2V0UHJvdG90eXBlT2YyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZlwiKSk7XG5cbnZhciBSZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gKDAsIF9nZXRQcm90b3R5cGVPZjJbXCJkZWZhdWx0XCJdKShEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gKDAsIF9nZXRQcm90b3R5cGVPZjJbXCJkZWZhdWx0XCJdKSh0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gKDAsIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMltcImRlZmF1bHRcIl0pKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG52YXIgU0NSSVBUX0lEID0gJ2hjYXB0Y2hhLWFwaS1zY3JpcHQtaWQnO1xudmFyIEhDQVBUQ0hBX0xPQURfRk5fTkFNRSA9ICdoY2FwdGNoYU9uTG9hZCc7IC8vIFByZXZlbnQgbG9hZGluZyBBUEkgc2NyaXB0IG11bHRpcGxlIHRpbWVzXG5cbnZhciByZXNvbHZlRm47XG52YXIgcmVqZWN0Rm47XG52YXIgbW91bnRQcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICByZXNvbHZlRm4gPSByZXNvbHZlO1xuICByZWplY3RGbiA9IHJlamVjdDtcbn0pOyAvLyBHZW5lcmF0ZSBoQ2FwdGNoYSBBUEkgc2NyaXB0XG5cbnZhciBtb3VudENhcHRjaGFTY3JpcHQgPSBmdW5jdGlvbiBtb3VudENhcHRjaGFTY3JpcHQoKSB7XG4gIHZhciBwYXJhbXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuXG4gIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChTQ1JJUFRfSUQpKSB7XG4gICAgLy8gQVBJIHdhcyBhbHJlYWR5IHJlcXVlc3RlZFxuICAgIHJldHVybiBtb3VudFByb21pc2U7XG4gIH0gLy8gQ3JlYXRlIGdsb2JhbCBvbmxvYWQgY2FsbGJhY2tcblxuXG4gIHdpbmRvd1tIQ0FQVENIQV9MT0FEX0ZOX05BTUVdID0gcmVzb2x2ZUZuO1xuICB2YXIgZG9tYWluID0gcGFyYW1zLmFwaWhvc3QgfHwgXCJodHRwczovL2pzLmhjYXB0Y2hhLmNvbVwiO1xuICBkZWxldGUgcGFyYW1zLmFwaWhvc3Q7XG4gIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICBzY3JpcHQuaWQgPSBTQ1JJUFRfSUQ7XG4gIHNjcmlwdC5zcmMgPSBcIlwiLmNvbmNhdChkb21haW4sIFwiLzEvYXBpLmpzP3JlbmRlcj1leHBsaWNpdCZvbmxvYWQ9XCIpLmNvbmNhdChIQ0FQVENIQV9MT0FEX0ZOX05BTUUpO1xuICBzY3JpcHQuYXN5bmMgPSB0cnVlO1xuXG4gIHNjcmlwdC5vbmVycm9yID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgcmV0dXJuIHJlamVjdEZuKCdzY3JpcHQtZXJyb3InKTtcbiAgfTtcblxuICB2YXIgcXVlcnkgPSAoMCwgX3V0aWxzLmdlbmVyYXRlUXVlcnkpKHBhcmFtcyk7XG4gIHNjcmlwdC5zcmMgKz0gcXVlcnkgIT09IFwiXCIgPyBcIiZcIi5jb25jYXQocXVlcnkpIDogXCJcIjtcbiAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpO1xuICByZXR1cm4gbW91bnRQcm9taXNlO1xufTtcblxudmFyIEhDYXB0Y2hhID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gICgwLCBfaW5oZXJpdHMyW1wiZGVmYXVsdFwiXSkoSENhcHRjaGEsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoSENhcHRjaGEpO1xuXG4gIGZ1bmN0aW9uIEhDYXB0Y2hhKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgKDAsIF9jbGFzc0NhbGxDaGVjazJbXCJkZWZhdWx0XCJdKSh0aGlzLCBIQ2FwdGNoYSk7XG4gICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcyk7IC8vIEFQSSBNZXRob2RzXG5cbiAgICBfdGhpcy5yZW5kZXJDYXB0Y2hhID0gX3RoaXMucmVuZGVyQ2FwdGNoYS5iaW5kKCgwLCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkMltcImRlZmF1bHRcIl0pKF90aGlzKSk7XG4gICAgX3RoaXMucmVzZXRDYXB0Y2hhID0gX3RoaXMucmVzZXRDYXB0Y2hhLmJpbmQoKDAsIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQyW1wiZGVmYXVsdFwiXSkoX3RoaXMpKTtcbiAgICBfdGhpcy5yZW1vdmVDYXB0Y2hhID0gX3RoaXMucmVtb3ZlQ2FwdGNoYS5iaW5kKCgwLCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkMltcImRlZmF1bHRcIl0pKF90aGlzKSk7XG4gICAgX3RoaXMuaXNSZWFkeSA9IF90aGlzLmlzUmVhZHkuYmluZCgoMCwgX2Fzc2VydFRoaXNJbml0aWFsaXplZDJbXCJkZWZhdWx0XCJdKShfdGhpcykpOyAvLyBFdmVudCBIYW5kbGVyc1xuXG4gICAgX3RoaXMubG9hZENhcHRjaGEgPSBfdGhpcy5sb2FkQ2FwdGNoYS5iaW5kKCgwLCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkMltcImRlZmF1bHRcIl0pKF90aGlzKSk7XG4gICAgX3RoaXMuaGFuZGxlT25Mb2FkID0gX3RoaXMuaGFuZGxlT25Mb2FkLmJpbmQoKDAsIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQyW1wiZGVmYXVsdFwiXSkoX3RoaXMpKTtcbiAgICBfdGhpcy5oYW5kbGVTdWJtaXQgPSBfdGhpcy5oYW5kbGVTdWJtaXQuYmluZCgoMCwgX2Fzc2VydFRoaXNJbml0aWFsaXplZDJbXCJkZWZhdWx0XCJdKShfdGhpcykpO1xuICAgIF90aGlzLmhhbmRsZUV4cGlyZSA9IF90aGlzLmhhbmRsZUV4cGlyZS5iaW5kKCgwLCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkMltcImRlZmF1bHRcIl0pKF90aGlzKSk7XG4gICAgX3RoaXMuaGFuZGxlRXJyb3IgPSBfdGhpcy5oYW5kbGVFcnJvci5iaW5kKCgwLCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkMltcImRlZmF1bHRcIl0pKF90aGlzKSk7XG4gICAgX3RoaXMuaGFuZGxlT3BlbiA9IF90aGlzLmhhbmRsZU9wZW4uYmluZCgoMCwgX2Fzc2VydFRoaXNJbml0aWFsaXplZDJbXCJkZWZhdWx0XCJdKShfdGhpcykpO1xuICAgIF90aGlzLmhhbmRsZUNsb3NlID0gX3RoaXMuaGFuZGxlQ2xvc2UuYmluZCgoMCwgX2Fzc2VydFRoaXNJbml0aWFsaXplZDJbXCJkZWZhdWx0XCJdKShfdGhpcykpO1xuICAgIF90aGlzLmhhbmRsZUNoYWxsZW5nZUV4cGlyZWQgPSBfdGhpcy5oYW5kbGVDaGFsbGVuZ2VFeHBpcmVkLmJpbmQoKDAsIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQyW1wiZGVmYXVsdFwiXSkoX3RoaXMpKTtcbiAgICB2YXIgaXNBcGlSZWFkeSA9IHR5cGVvZiBoY2FwdGNoYSAhPT0gJ3VuZGVmaW5lZCc7XG4gICAgX3RoaXMucmVmID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZVJlZigpO1xuICAgIF90aGlzLmFwaVNjcmlwdFJlcXVlc3RlZCA9IGZhbHNlO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgaXNBcGlSZWFkeTogaXNBcGlSZWFkeSxcbiAgICAgIGlzUmVtb3ZlZDogZmFsc2UsXG4gICAgICBlbGVtZW50SWQ6IHByb3BzLmlkLFxuICAgICAgY2FwdGNoYUlkOiAnJ1xuICAgIH07XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgKDAsIF9jcmVhdGVDbGFzczJbXCJkZWZhdWx0XCJdKShIQ2FwdGNoYSwgW3tcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkTW91bnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAvLyBPbmNlIGNhcHRjaGEgaXMgbW91bnRlZCBpbnRpYWxpemUgaENhcHRjaGEgLSBoQ2FwdGNoYVxuICAgICAgdmFyIGlzQXBpUmVhZHkgPSB0aGlzLnN0YXRlLmlzQXBpUmVhZHk7XG4gICAgICAvKlxuICAgICAgICogQ2hlY2sgaWYgaENhcHRjaGEgaGFzIGFscmVhZHkgYmVlbiBsb2FkZWQsXG4gICAgICAgKiBJZiBZZXMsIHJlbmRlciB0aGUgY2FwdGNoYVxuICAgICAgICogSWYgTm8sIGNyZWF0ZSBzY3JpcHQgdGFnIGFuZCB3YWl0IHRvIHJlbmRlciB0aGUgY2FwdGNoYVxuICAgICAgICovXG5cbiAgICAgIGlmIChpc0FwaVJlYWR5KSB7XG4gICAgICAgIHRoaXMucmVuZGVyQ2FwdGNoYSgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMubG9hZENhcHRjaGEoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY29tcG9uZW50V2lsbFVubW91bnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICB2YXIgY2FwdGNoYUlkID0gdGhpcy5zdGF0ZS5jYXB0Y2hhSWQ7XG5cbiAgICAgIGlmICghdGhpcy5pc1JlYWR5KCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSAvLyBSZXNldCBhbnkgc3RvcmVkIHZhcmlhYmxlcyAvIHRpbWVycyB3aGVuIHVubW91bnRpbmdcblxuXG4gICAgICBoY2FwdGNoYS5yZXNldChjYXB0Y2hhSWQpO1xuICAgICAgaGNhcHRjaGEucmVtb3ZlKGNhcHRjaGFJZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNob3VsZENvbXBvbmVudFVwZGF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzLCBuZXh0U3RhdGUpIHtcbiAgICAgIC8vIFByZXZlbnQgY29tcG9uZW50IHJlLXJlbmRlcmluZyB3aGVuIHRoZXNlIGludGVybmFsIHN0YXRlIHZhcmlhYmxlcyBhcmUgdXBkYXRlZFxuICAgICAgaWYgKHRoaXMuc3RhdGUuaXNBcGlSZWFkeSAhPT0gbmV4dFN0YXRlLmlzQXBpUmVhZHkgfHwgdGhpcy5zdGF0ZS5pc1JlbW92ZWQgIT09IG5leHRTdGF0ZS5pc1JlbW92ZWQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkVXBkYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICAvLyBQcm9wIEtleXMgdGhhdCBjb3VsZCBjaGFuZ2VcbiAgICAgIHZhciBrZXlzID0gWydzaXRla2V5JywgJ3NpemUnLCAndGhlbWUnLCAndGFiaW5kZXgnLCAnbGFuZ3VhZ2VPdmVycmlkZScsICdlbmRwb2ludCddOyAvLyBTZWUgaWYgYW55IHByb3BzIGNoYW5nZWQgZHVyaW5nIGNvbXBvbmVudCB1cGRhdGVcblxuICAgICAgdmFyIG1hdGNoID0ga2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiBwcmV2UHJvcHNba2V5XSA9PT0gX3RoaXMyLnByb3BzW2tleV07XG4gICAgICB9KTsgLy8gSWYgdGhleSBoYXZlIGNoYW5nZWQsIHJlbW92ZSBjdXJyZW50IGNhcHRjaGEgYW5kIHJlbmRlciBhIG5ldyBvbmVcblxuICAgICAgaWYgKCFtYXRjaCkge1xuICAgICAgICB0aGlzLnJlbW92ZUNhcHRjaGEoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF90aGlzMi5yZW5kZXJDYXB0Y2hhKCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJsb2FkQ2FwdGNoYVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsb2FkQ2FwdGNoYSgpIHtcbiAgICAgIGlmICh0aGlzLmFwaVNjcmlwdFJlcXVlc3RlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgYXBpaG9zdCA9IF90aGlzJHByb3BzLmFwaWhvc3QsXG4gICAgICAgICAgYXNzZXRob3N0ID0gX3RoaXMkcHJvcHMuYXNzZXRob3N0LFxuICAgICAgICAgIGVuZHBvaW50ID0gX3RoaXMkcHJvcHMuZW5kcG9pbnQsXG4gICAgICAgICAgaG9zdCA9IF90aGlzJHByb3BzLmhvc3QsXG4gICAgICAgICAgaW1naG9zdCA9IF90aGlzJHByb3BzLmltZ2hvc3QsXG4gICAgICAgICAgaGwgPSBfdGhpcyRwcm9wcy5sYW5ndWFnZU92ZXJyaWRlLFxuICAgICAgICAgIHJlQ2FwdGNoYUNvbXBhdCA9IF90aGlzJHByb3BzLnJlQ2FwdGNoYUNvbXBhdCxcbiAgICAgICAgICByZXBvcnRhcGkgPSBfdGhpcyRwcm9wcy5yZXBvcnRhcGksXG4gICAgICAgICAgc2VudHJ5ID0gX3RoaXMkcHJvcHMuc2VudHJ5LFxuICAgICAgICAgIGN1c3RvbSA9IF90aGlzJHByb3BzLmN1c3RvbTtcbiAgICAgIHZhciBtb3VudFBhcmFtcyA9IHtcbiAgICAgICAgYXBpaG9zdDogYXBpaG9zdCxcbiAgICAgICAgYXNzZXRob3N0OiBhc3NldGhvc3QsXG4gICAgICAgIGVuZHBvaW50OiBlbmRwb2ludCxcbiAgICAgICAgaGw6IGhsLFxuICAgICAgICBob3N0OiBob3N0LFxuICAgICAgICBpbWdob3N0OiBpbWdob3N0LFxuICAgICAgICByZWNhcHRjaGFjb21wYXQ6IHJlQ2FwdGNoYUNvbXBhdCA9PT0gZmFsc2UgPyBcIm9mZlwiIDogbnVsbCxcbiAgICAgICAgcmVwb3J0YXBpOiByZXBvcnRhcGksXG4gICAgICAgIHNlbnRyeTogc2VudHJ5LFxuICAgICAgICBjdXN0b206IGN1c3RvbVxuICAgICAgfTtcbiAgICAgIG1vdW50Q2FwdGNoYVNjcmlwdChtb3VudFBhcmFtcykudGhlbih0aGlzLmhhbmRsZU9uTG9hZClbXCJjYXRjaFwiXSh0aGlzLmhhbmRsZUVycm9yKTtcbiAgICAgIHRoaXMuYXBpU2NyaXB0UmVxdWVzdGVkID0gdHJ1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyQ2FwdGNoYVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJDYXB0Y2hhKG9uUmVhZHkpIHtcbiAgICAgIHZhciBpc0FwaVJlYWR5ID0gdGhpcy5zdGF0ZS5pc0FwaVJlYWR5O1xuICAgICAgaWYgKCFpc0FwaVJlYWR5KSByZXR1cm47XG4gICAgICB2YXIgcmVuZGVyUGFyYW1zID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICAgIFwib3Blbi1jYWxsYmFja1wiOiB0aGlzLmhhbmRsZU9wZW4sXG4gICAgICAgIFwiY2xvc2UtY2FsbGJhY2tcIjogdGhpcy5oYW5kbGVDbG9zZSxcbiAgICAgICAgXCJlcnJvci1jYWxsYmFja1wiOiB0aGlzLmhhbmRsZUVycm9yLFxuICAgICAgICBcImNoYWxleHBpcmVkLWNhbGxiYWNrXCI6IHRoaXMuaGFuZGxlQ2hhbGxlbmdlRXhwaXJlZCxcbiAgICAgICAgXCJleHBpcmVkLWNhbGxiYWNrXCI6IHRoaXMuaGFuZGxlRXhwaXJlLFxuICAgICAgICBcImNhbGxiYWNrXCI6IHRoaXMuaGFuZGxlU3VibWl0XG4gICAgICB9LCB0aGlzLnByb3BzLCB7XG4gICAgICAgIGhsOiB0aGlzLnByb3BzLmhsIHx8IHRoaXMucHJvcHMubGFuZ3VhZ2VPdmVycmlkZSxcbiAgICAgICAgbGFuZ3VhZ2VPdmVycmlkZTogdW5kZWZpbmVkXG4gICAgICB9KTsgLy9SZW5kZXIgaENhcHRjaGEgd2lkZ2V0IGFuZCBwcm92aWRlIG5lY2Vzc2FyeSBjYWxsYmFja3MgLSBoQ2FwdGNoYVxuXG4gICAgICB2YXIgY2FwdGNoYUlkID0gaGNhcHRjaGEucmVuZGVyKHRoaXMucmVmLmN1cnJlbnQsIHJlbmRlclBhcmFtcyk7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaXNSZW1vdmVkOiBmYWxzZSxcbiAgICAgICAgY2FwdGNoYUlkOiBjYXB0Y2hhSWRcbiAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgb25SZWFkeSAmJiBvblJlYWR5KCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVzZXRDYXB0Y2hhXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc2V0Q2FwdGNoYSgpIHtcbiAgICAgIHZhciBjYXB0Y2hhSWQgPSB0aGlzLnN0YXRlLmNhcHRjaGFJZDtcblxuICAgICAgaWYgKCF0aGlzLmlzUmVhZHkoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9IC8vIFJlc2V0IGNhcHRjaGEgc3RhdGUsIHJlbW92ZXMgc3RvcmVkIHRva2VuIGFuZCB1bnRpY2tzIGNoZWNrYm94XG5cblxuICAgICAgaGNhcHRjaGEucmVzZXQoY2FwdGNoYUlkKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVtb3ZlQ2FwdGNoYVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmVDYXB0Y2hhKGNhbGxiYWNrKSB7XG4gICAgICB2YXIgY2FwdGNoYUlkID0gdGhpcy5zdGF0ZS5jYXB0Y2hhSWQ7XG5cbiAgICAgIGlmICghdGhpcy5pc1JlYWR5KCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaXNSZW1vdmVkOiB0cnVlXG4gICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGhjYXB0Y2hhLnJlbW92ZShjYXB0Y2hhSWQpO1xuICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhbmRsZU9uTG9hZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVPbkxvYWQoKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGlzQXBpUmVhZHk6IHRydWVcbiAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gcmVuZGVyIGNhcHRjaGEgYW5kIHdhaXQgZm9yIGNhcHRjaGEgaWRcbiAgICAgICAgX3RoaXMzLnJlbmRlckNhcHRjaGEoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIC8vIHRyaWdnZXIgb25Mb2FkIGlmIGl0IGV4aXN0c1xuICAgICAgICAgIHZhciBvbkxvYWQgPSBfdGhpczMucHJvcHMub25Mb2FkO1xuICAgICAgICAgIGlmIChvbkxvYWQpIG9uTG9hZCgpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYW5kbGVTdWJtaXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlU3VibWl0KGV2ZW50KSB7XG4gICAgICB2YXIgb25WZXJpZnkgPSB0aGlzLnByb3BzLm9uVmVyaWZ5O1xuICAgICAgdmFyIF90aGlzJHN0YXRlID0gdGhpcy5zdGF0ZSxcbiAgICAgICAgICBpc1JlbW92ZWQgPSBfdGhpcyRzdGF0ZS5pc1JlbW92ZWQsXG4gICAgICAgICAgY2FwdGNoYUlkID0gX3RoaXMkc3RhdGUuY2FwdGNoYUlkO1xuICAgICAgaWYgKHR5cGVvZiBoY2FwdGNoYSA9PT0gJ3VuZGVmaW5lZCcgfHwgaXNSZW1vdmVkKSByZXR1cm47XG4gICAgICB2YXIgdG9rZW4gPSBoY2FwdGNoYS5nZXRSZXNwb25zZShjYXB0Y2hhSWQpOyAvL0dldCByZXNwb25zZSB0b2tlbiBmcm9tIGhDYXB0Y2hhIHdpZGdldFxuXG4gICAgICB2YXIgZWtleSA9IGhjYXB0Y2hhLmdldFJlc3BLZXkoY2FwdGNoYUlkKTsgLy9HZXQgY3VycmVudCBjaGFsbGVuZ2Ugc2Vzc2lvbiBpZCBmcm9tIGhDYXB0Y2hhIHdpZGdldFxuXG4gICAgICBvblZlcmlmeSh0b2tlbiwgZWtleSk7IC8vRGlzcGF0Y2ggZXZlbnQgdG8gdmVyaWZ5IHVzZXIgcmVzcG9uc2VcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaGFuZGxlRXhwaXJlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUV4cGlyZSgpIHtcbiAgICAgIHZhciBvbkV4cGlyZSA9IHRoaXMucHJvcHMub25FeHBpcmU7XG4gICAgICB2YXIgY2FwdGNoYUlkID0gdGhpcy5zdGF0ZS5jYXB0Y2hhSWQ7XG5cbiAgICAgIGlmICghdGhpcy5pc1JlYWR5KCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBoY2FwdGNoYS5yZXNldChjYXB0Y2hhSWQpOyAvLyBJZiBoQ2FwdGNoYSBydW5zIGludG8gZXJyb3IsIHJlc2V0IGNhcHRjaGEgLSBoQ2FwdGNoYVxuXG4gICAgICBpZiAob25FeHBpcmUpIG9uRXhwaXJlKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhbmRsZUVycm9yXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUVycm9yKGV2ZW50KSB7XG4gICAgICB2YXIgb25FcnJvciA9IHRoaXMucHJvcHMub25FcnJvcjtcbiAgICAgIHZhciBjYXB0Y2hhSWQgPSB0aGlzLnN0YXRlLmNhcHRjaGFJZDtcblxuICAgICAgaWYgKHRoaXMuaXNSZWFkeSgpKSB7XG4gICAgICAgIC8vIElmIGhDYXB0Y2hhIHJ1bnMgaW50byBlcnJvciwgcmVzZXQgY2FwdGNoYSAtIGhDYXB0Y2hhXG4gICAgICAgIGhjYXB0Y2hhLnJlc2V0KGNhcHRjaGFJZCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChvbkVycm9yKSBvbkVycm9yKGV2ZW50KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaXNSZWFkeVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc1JlYWR5KCkge1xuICAgICAgdmFyIF90aGlzJHN0YXRlMiA9IHRoaXMuc3RhdGUsXG4gICAgICAgICAgaXNBcGlSZWFkeSA9IF90aGlzJHN0YXRlMi5pc0FwaVJlYWR5LFxuICAgICAgICAgIGlzUmVtb3ZlZCA9IF90aGlzJHN0YXRlMi5pc1JlbW92ZWQ7XG4gICAgICByZXR1cm4gaXNBcGlSZWFkeSAmJiAhaXNSZW1vdmVkO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYW5kbGVPcGVuXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZU9wZW4oKSB7XG4gICAgICBpZiAoIXRoaXMuaXNSZWFkeSgpIHx8ICF0aGlzLnByb3BzLm9uT3Blbikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMucHJvcHMub25PcGVuKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhbmRsZUNsb3NlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKCkge1xuICAgICAgaWYgKCF0aGlzLmlzUmVhZHkoKSB8fCAhdGhpcy5wcm9wcy5vbkNsb3NlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5wcm9wcy5vbkNsb3NlKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhbmRsZUNoYWxsZW5nZUV4cGlyZWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlQ2hhbGxlbmdlRXhwaXJlZCgpIHtcbiAgICAgIGlmICghdGhpcy5pc1JlYWR5KCkgfHwgIXRoaXMucHJvcHMub25DaGFsRXhwaXJlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMucHJvcHMub25DaGFsRXhwaXJlZCgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJleGVjdXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGV4ZWN1dGUoKSB7XG4gICAgICB2YXIgb3B0cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogbnVsbDtcbiAgICAgIHZhciBjYXB0Y2hhSWQgPSB0aGlzLnN0YXRlLmNhcHRjaGFJZDtcblxuICAgICAgaWYgKCF0aGlzLmlzUmVhZHkoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChvcHRzICYmICgwLCBfdHlwZW9mMltcImRlZmF1bHRcIl0pKG9wdHMpICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIG9wdHMgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaGNhcHRjaGEuZXhlY3V0ZShjYXB0Y2hhSWQsIG9wdHMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzZXREYXRhXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldERhdGEoZGF0YSkge1xuICAgICAgdmFyIGNhcHRjaGFJZCA9IHRoaXMuc3RhdGUuY2FwdGNoYUlkO1xuXG4gICAgICBpZiAoIXRoaXMuaXNSZWFkeSgpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGRhdGEgJiYgKDAsIF90eXBlb2YyW1wiZGVmYXVsdFwiXSkoZGF0YSkgIT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgZGF0YSA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIGhjYXB0Y2hhLnNldERhdGEoY2FwdGNoYUlkLCBkYXRhKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UmVzcG9uc2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UmVzcG9uc2UoKSB7XG4gICAgICByZXR1cm4gaGNhcHRjaGEuZ2V0UmVzcG9uc2UodGhpcy5zdGF0ZS5jYXB0Y2hhSWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRSZXNwS2V5XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJlc3BLZXkoKSB7XG4gICAgICByZXR1cm4gaGNhcHRjaGEuZ2V0UmVzcEtleSh0aGlzLnN0YXRlLmNhcHRjaGFJZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgZWxlbWVudElkID0gdGhpcy5zdGF0ZS5lbGVtZW50SWQ7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICByZWY6IHRoaXMucmVmLFxuICAgICAgICBpZDogZWxlbWVudElkXG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcbiAgcmV0dXJuIEhDYXB0Y2hhO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG52YXIgX2RlZmF1bHQgPSBIQ2FwdGNoYTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@hcaptcha/react-hcaptcha/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@hcaptcha/react-hcaptcha/dist/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@hcaptcha/react-hcaptcha/dist/utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.generateQuery = generateQuery;\n\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"(ssr)/./node_modules/@babel/runtime/helpers/slicedToArray.js\"));\n\nfunction generateQuery(params) {\n  return Object.entries(params).filter(function (_ref) {\n    var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return value || value === false;\n  }).map(function (_ref3) {\n    var _ref4 = (0, _slicedToArray2[\"default\"])(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value));\n  }).join(\"&\");\n}\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGhjYXB0Y2hhL3JlYWN0LWhjYXB0Y2hhL2Rpc3QvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsNkJBQTZCLG1CQUFPLENBQUMsMEhBQThDOztBQUVuRiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixxQkFBcUI7O0FBRXJCLDZDQUE2QyxtQkFBTyxDQUFDLDBHQUFzQzs7QUFFM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsby1uZWFyLy4vbm9kZV9tb2R1bGVzL0BoY2FwdGNoYS9yZWFjdC1oY2FwdGNoYS9kaXN0L3V0aWxzLmpzP2ZjZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5nZW5lcmF0ZVF1ZXJ5ID0gZ2VuZXJhdGVRdWVyeTtcblxudmFyIF9zbGljZWRUb0FycmF5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheVwiKSk7XG5cbmZ1bmN0aW9uIGdlbmVyYXRlUXVlcnkocGFyYW1zKSB7XG4gIHJldHVybiBPYmplY3QuZW50cmllcyhwYXJhbXMpLmZpbHRlcihmdW5jdGlvbiAoX3JlZikge1xuICAgIHZhciBfcmVmMiA9ICgwLCBfc2xpY2VkVG9BcnJheTJbXCJkZWZhdWx0XCJdKShfcmVmLCAyKSxcbiAgICAgICAga2V5ID0gX3JlZjJbMF0sXG4gICAgICAgIHZhbHVlID0gX3JlZjJbMV07XG5cbiAgICByZXR1cm4gdmFsdWUgfHwgdmFsdWUgPT09IGZhbHNlO1xuICB9KS5tYXAoZnVuY3Rpb24gKF9yZWYzKSB7XG4gICAgdmFyIF9yZWY0ID0gKDAsIF9zbGljZWRUb0FycmF5MltcImRlZmF1bHRcIl0pKF9yZWYzLCAyKSxcbiAgICAgICAga2V5ID0gX3JlZjRbMF0sXG4gICAgICAgIHZhbHVlID0gX3JlZjRbMV07XG5cbiAgICByZXR1cm4gXCJcIi5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGtleSksIFwiPVwiKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSk7XG4gIH0pLmpvaW4oXCImXCIpO1xufVxuXG47Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@hcaptcha/react-hcaptcha/dist/utils.js\n");

/***/ })

};
;