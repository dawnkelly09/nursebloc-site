"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@hcaptcha";
exports.ids = ["vendor-chunks/@hcaptcha"];
exports.modules = {

/***/ "(ssr)/./node_modules/@hcaptcha/react-hcaptcha/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@hcaptcha/react-hcaptcha/dist/index.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ \"(ssr)/./node_modules/@babel/runtime/helpers/typeof.js\"));\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(ssr)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/./node_modules/@babel/runtime/helpers/createClass.js\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \"(ssr)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(ssr)/./node_modules/@babel/runtime/helpers/inherits.js\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(ssr)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(ssr)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\n\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\n\nvar _utils = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@hcaptcha/react-hcaptcha/dist/utils.js\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SCRIPT_ID = 'hcaptcha-api-script-id';\nvar HCAPTCHA_LOAD_FN_NAME = 'hcaptchaOnLoad'; // Prevent loading API script multiple times\n\nvar resolveFn;\nvar rejectFn;\nvar mountPromise = new Promise(function (resolve, reject) {\n  resolveFn = resolve;\n  rejectFn = reject;\n}); // Generate hCaptcha API script\n\nvar mountCaptchaScript = function mountCaptchaScript() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (document.getElementById(SCRIPT_ID)) {\n    // API was already requested\n    return mountPromise;\n  } // Create global onload callback\n\n\n  window[HCAPTCHA_LOAD_FN_NAME] = resolveFn;\n  var domain = params.apihost || \"https://js.hcaptcha.com\";\n  delete params.apihost;\n  var script = document.createElement(\"script\");\n  script.id = SCRIPT_ID;\n  script.src = \"\".concat(domain, \"/1/api.js?render=explicit&onload=\").concat(HCAPTCHA_LOAD_FN_NAME);\n  script.async = true;\n\n  script.onerror = function (event) {\n    return rejectFn('script-error');\n  };\n\n  var query = (0, _utils.generateQuery)(params);\n  script.src += query !== \"\" ? \"&\".concat(query) : \"\";\n  document.head.appendChild(script);\n  return mountPromise;\n};\n\nvar HCaptcha = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(HCaptcha, _React$Component);\n\n  var _super = _createSuper(HCaptcha);\n\n  function HCaptcha(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, HCaptcha);\n    _this = _super.call(this, props); // API Methods\n\n    _this.renderCaptcha = _this.renderCaptcha.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.resetCaptcha = _this.resetCaptcha.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.removeCaptcha = _this.removeCaptcha.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.isReady = _this.isReady.bind((0, _assertThisInitialized2[\"default\"])(_this)); // Event Handlers\n\n    _this.loadCaptcha = _this.loadCaptcha.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleOnLoad = _this.handleOnLoad.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleSubmit = _this.handleSubmit.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleExpire = _this.handleExpire.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleError = _this.handleError.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleOpen = _this.handleOpen.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleClose = _this.handleClose.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleChallengeExpired = _this.handleChallengeExpired.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    var isApiReady = typeof hcaptcha !== 'undefined';\n    _this.ref = /*#__PURE__*/React.createRef();\n    _this.apiScriptRequested = false;\n    _this.state = {\n      isApiReady: isApiReady,\n      isRemoved: false,\n      elementId: props.id,\n      captchaId: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(HCaptcha, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Once captcha is mounted intialize hCaptcha - hCaptcha\n      var isApiReady = this.state.isApiReady;\n      /*\n       * Check if hCaptcha has already been loaded,\n       * If Yes, render the captcha\n       * If No, create script tag and wait to render the captcha\n       */\n\n      if (isApiReady) {\n        this.renderCaptcha();\n        return;\n      }\n\n      this.loadCaptcha();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      } // Reset any stored variables / timers when unmounting\n\n\n      hcaptcha.reset(captchaId);\n      hcaptcha.remove(captchaId);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      // Prevent component re-rendering when these internal state variables are updated\n      if (this.state.isApiReady !== nextState.isApiReady || this.state.isRemoved !== nextState.isRemoved) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      // Prop Keys that could change\n      var keys = ['sitekey', 'size', 'theme', 'tabindex', 'languageOverride', 'endpoint']; // See if any props changed during component update\n\n      var match = keys.every(function (key) {\n        return prevProps[key] === _this2.props[key];\n      }); // If they have changed, remove current captcha and render a new one\n\n      if (!match) {\n        this.removeCaptcha(function () {\n          _this2.renderCaptcha();\n        });\n      }\n    }\n  }, {\n    key: \"loadCaptcha\",\n    value: function loadCaptcha() {\n      if (this.apiScriptRequested) {\n        return;\n      }\n\n      var _this$props = this.props,\n          apihost = _this$props.apihost,\n          assethost = _this$props.assethost,\n          endpoint = _this$props.endpoint,\n          host = _this$props.host,\n          imghost = _this$props.imghost,\n          hl = _this$props.languageOverride,\n          reCaptchaCompat = _this$props.reCaptchaCompat,\n          reportapi = _this$props.reportapi,\n          sentry = _this$props.sentry,\n          custom = _this$props.custom;\n      var mountParams = {\n        apihost: apihost,\n        assethost: assethost,\n        endpoint: endpoint,\n        hl: hl,\n        host: host,\n        imghost: imghost,\n        recaptchacompat: reCaptchaCompat === false ? \"off\" : null,\n        reportapi: reportapi,\n        sentry: sentry,\n        custom: custom\n      };\n      mountCaptchaScript(mountParams).then(this.handleOnLoad)[\"catch\"](this.handleError);\n      this.apiScriptRequested = true;\n    }\n  }, {\n    key: \"renderCaptcha\",\n    value: function renderCaptcha(onReady) {\n      var isApiReady = this.state.isApiReady;\n      if (!isApiReady) return;\n      var renderParams = Object.assign({\n        \"open-callback\": this.handleOpen,\n        \"close-callback\": this.handleClose,\n        \"error-callback\": this.handleError,\n        \"chalexpired-callback\": this.handleChallengeExpired,\n        \"expired-callback\": this.handleExpire,\n        \"callback\": this.handleSubmit\n      }, this.props, {\n        hl: this.props.hl || this.props.languageOverride,\n        languageOverride: undefined\n      }); //Render hCaptcha widget and provide necessary callbacks - hCaptcha\n\n      var captchaId = hcaptcha.render(this.ref.current, renderParams);\n      this.setState({\n        isRemoved: false,\n        captchaId: captchaId\n      }, function () {\n        onReady && onReady();\n      });\n    }\n  }, {\n    key: \"resetCaptcha\",\n    value: function resetCaptcha() {\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      } // Reset captcha state, removes stored token and unticks checkbox\n\n\n      hcaptcha.reset(captchaId);\n    }\n  }, {\n    key: \"removeCaptcha\",\n    value: function removeCaptcha(callback) {\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      this.setState({\n        isRemoved: true\n      }, function () {\n        hcaptcha.remove(captchaId);\n        callback && callback();\n      });\n    }\n  }, {\n    key: \"handleOnLoad\",\n    value: function handleOnLoad() {\n      var _this3 = this;\n\n      this.setState({\n        isApiReady: true\n      }, function () {\n        // render captcha and wait for captcha id\n        _this3.renderCaptcha(function () {\n          // trigger onLoad if it exists\n          var onLoad = _this3.props.onLoad;\n          if (onLoad) onLoad();\n        });\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var onVerify = this.props.onVerify;\n      var _this$state = this.state,\n          isRemoved = _this$state.isRemoved,\n          captchaId = _this$state.captchaId;\n      if (typeof hcaptcha === 'undefined' || isRemoved) return;\n      var token = hcaptcha.getResponse(captchaId); //Get response token from hCaptcha widget\n\n      var ekey = hcaptcha.getRespKey(captchaId); //Get current challenge session id from hCaptcha widget\n\n      onVerify(token, ekey); //Dispatch event to verify user response\n    }\n  }, {\n    key: \"handleExpire\",\n    value: function handleExpire() {\n      var onExpire = this.props.onExpire;\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      hcaptcha.reset(captchaId); // If hCaptcha runs into error, reset captcha - hCaptcha\n\n      if (onExpire) onExpire();\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(event) {\n      var onError = this.props.onError;\n      var captchaId = this.state.captchaId;\n\n      if (this.isReady()) {\n        // If hCaptcha runs into error, reset captcha - hCaptcha\n        hcaptcha.reset(captchaId);\n      }\n\n      if (onError) onError(event);\n    }\n  }, {\n    key: \"isReady\",\n    value: function isReady() {\n      var _this$state2 = this.state,\n          isApiReady = _this$state2.isApiReady,\n          isRemoved = _this$state2.isRemoved;\n      return isApiReady && !isRemoved;\n    }\n  }, {\n    key: \"handleOpen\",\n    value: function handleOpen() {\n      if (!this.isReady() || !this.props.onOpen) {\n        return;\n      }\n\n      this.props.onOpen();\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      if (!this.isReady() || !this.props.onClose) {\n        return;\n      }\n\n      this.props.onClose();\n    }\n  }, {\n    key: \"handleChallengeExpired\",\n    value: function handleChallengeExpired() {\n      if (!this.isReady() || !this.props.onChalExpired) {\n        return;\n      }\n\n      this.props.onChalExpired();\n    }\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      if (opts && (0, _typeof2[\"default\"])(opts) !== \"object\") {\n        opts = null;\n      }\n\n      return hcaptcha.execute(captchaId, opts);\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(data) {\n      var captchaId = this.state.captchaId;\n\n      if (!this.isReady()) {\n        return;\n      }\n\n      if (data && (0, _typeof2[\"default\"])(data) !== \"object\") {\n        data = null;\n      }\n\n      hcaptcha.setData(captchaId, data);\n    }\n  }, {\n    key: \"getResponse\",\n    value: function getResponse() {\n      return hcaptcha.getResponse(this.state.captchaId);\n    }\n  }, {\n    key: \"getRespKey\",\n    value: function getRespKey() {\n      return hcaptcha.getRespKey(this.state.captchaId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var elementId = this.state.elementId;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.ref,\n        id: elementId\n      });\n    }\n  }]);\n  return HCaptcha;\n}(React.Component);\n\nvar _default = HCaptcha;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@hcaptcha/react-hcaptcha/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@hcaptcha/react-hcaptcha/dist/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@hcaptcha/react-hcaptcha/dist/utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(ssr)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.generateQuery = generateQuery;\n\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"(ssr)/./node_modules/@babel/runtime/helpers/slicedToArray.js\"));\n\nfunction generateQuery(params) {\n  return Object.entries(params).filter(function (_ref) {\n    var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return value || value === false;\n  }).map(function (_ref3) {\n    var _ref4 = (0, _slicedToArray2[\"default\"])(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value));\n  }).join(\"&\");\n}\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGhjYXB0Y2hhL3JlYWN0LWhjYXB0Y2hhL2Rpc3QvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsNkJBQTZCLG1CQUFPLENBQUMsMEhBQThDOztBQUVuRiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixxQkFBcUI7O0FBRXJCLDZDQUE2QyxtQkFBTyxDQUFDLDBHQUFzQzs7QUFFM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9udXJzZWJsb2MvLi9ub2RlX21vZHVsZXMvQGhjYXB0Y2hhL3JlYWN0LWhjYXB0Y2hhL2Rpc3QvdXRpbHMuanM/ZmNmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmdlbmVyYXRlUXVlcnkgPSBnZW5lcmF0ZVF1ZXJ5O1xuXG52YXIgX3NsaWNlZFRvQXJyYXkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5XCIpKTtcblxuZnVuY3Rpb24gZ2VuZXJhdGVRdWVyeShwYXJhbXMpIHtcbiAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKHBhcmFtcykuZmlsdGVyKGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIF9yZWYyID0gKDAsIF9zbGljZWRUb0FycmF5MltcImRlZmF1bHRcIl0pKF9yZWYsIDIpLFxuICAgICAgICBrZXkgPSBfcmVmMlswXSxcbiAgICAgICAgdmFsdWUgPSBfcmVmMlsxXTtcblxuICAgIHJldHVybiB2YWx1ZSB8fCB2YWx1ZSA9PT0gZmFsc2U7XG4gIH0pLm1hcChmdW5jdGlvbiAoX3JlZjMpIHtcbiAgICB2YXIgX3JlZjQgPSAoMCwgX3NsaWNlZFRvQXJyYXkyW1wiZGVmYXVsdFwiXSkoX3JlZjMsIDIpLFxuICAgICAgICBrZXkgPSBfcmVmNFswXSxcbiAgICAgICAgdmFsdWUgPSBfcmVmNFsxXTtcblxuICAgIHJldHVybiBcIlwiLmNvbmNhdChlbmNvZGVVUklDb21wb25lbnQoa2V5KSwgXCI9XCIpLmNvbmNhdChlbmNvZGVVUklDb21wb25lbnQodmFsdWUpKTtcbiAgfSkuam9pbihcIiZcIik7XG59XG5cbjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@hcaptcha/react-hcaptcha/dist/utils.js\n");

/***/ })

};
;